{
  "group": {
    "title": "Definitions"
  },
  "group_id": "1",
  "private": "no",
  "create_db_records": "no",
  "references": [
     {
       "id": "1",
       "link_text": "MartinRobertC_2000_DesignPrinciplesPatterns",
       "url": "https://web.archive.org/web/20150906155800/http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf"
     },
     {
       "id": "2",
       "link_text": "BallardBritt_20161101_Thoughtbot_BackBasicsSolid",
       "url": "https://thoughtbot.com/blog/back-to-basics-solid"
     },
     {
       "id": "3",
       "link_text": "UncleBobMartinCleanCodeProgrammerSpeakerTeacher",
       "url": "http://cleancoder.com/products"
     },
     {
       "id": "4",
       "link_text": "MartinBob_20150523_YouTube_SOLIDPrinciplesObject",
       "url": "https://www.youtube.com/watch?v=TMuno5RZNeE"
     },
     {
       "id": "5",
       "link_text": "LHSimon_20190101_ITNEXT_SOLIDPrinciplesExplanation",
       "url": "https://itnext.io/solid-principles-explanation-and-examples-715b975dcad4"
     },
     {
       "id": "6",
       "link_text": "20200430_Wikipedia_SOLID",
       "url": "https://en.wikipedia.org/wiki/SOLID"
     }
  ],
  "paragraphs": [
    {
      "id": "1",
      "subtitle": "Software Architecture",
      "html_tag": "b",
      "direct_quote": "yes",
      "note": "See reference for original references",
      "text": [
         "The answer is multitiered.",
         "At the highest level,",
         "there are the architecture patterns that define the overall shape and structure of software applications.",
         "Down a level is the architecture that is specifically related to the purpose of the software application.",
         "Yet another level down resides the architecture of the modules and their interconnections.",
         "This is the domain of design patterns."
       ]
    },
    {
      "id": "2",
      "subtitle": "SOLID Principles",
      "html_tag": "b",
      "direct_quote": "no",
      "note": "",
      "text": [
         "SOLID Principles are a fundamental building block of Object Oriented Programming.",
         "|||a|||Robert C. Martin|||https://en.wikipedia.org/wiki/Robert_C._Martin |||end a|||",
         "introduced the five concepts and",
         "|||a|||Michael Feathers|||https://twitter.com/mfeathers|||end a||| introduced the Acronym.",
         "|||ul|||",
         "|||li|||S - Single Responsibility Principle|||end li|||",
         "|||li|||O - Open/Closed Principle|||end li|||",
         "|||li|||L - Liskov Substitution Principle|||end li|||",
         "|||li|||I - Interface Segregation Principle|||end li|||",
         "|||li|||D - Dependency Inversion Principle|||end li|||",
         "|||end ul|||",
         "The main purposes are interrelated: maintainability, understandability and flexibility"
      ]
    }
  ],
  "ref_link_paragraph": [
    {
      "ref_link": "1",
      "paragraph_id": "1"
    },
    {
      "ref_link": "1",
      "paragraph_id": "2"
    },
    {
      "ref_link": "2",
      "paragraph_id": "2"
    },
    {
      "ref_link": "3",
      "paragraph_id": "2"
    },
    {
      "ref_link": "4",
      "paragraph_id": "2"
    },
    {
      "ref_link": "5",
      "paragraph_id": "2"
    },
    {
      "ref_link": "6",
      "paragraph_id": "2"
    }
  ],
  "group_paragraph": [
    {
      "group_id": "1",
      "paragraph_id": "1"
    },
    {
      "group_id": "1",
      "paragraph_id": "2"
    }
  ]
}
