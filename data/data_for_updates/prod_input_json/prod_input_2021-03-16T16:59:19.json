{
    "categories": [
        {
            "category_type": "study",
            "id": 5,
            "slug": "study",
            "title": "Study"
        }
    ],
    "group_paragraph": [
        {
            "group_id": 30,
            "id": 170,
            "order": 0,
            "paragraph_id": 180
        },
        {
            "group_id": 29,
            "id": 158,
            "order": 3,
            "paragraph_id": 169
        }
    ],
    "groups": [
        {
            "cat_sort": 2,
            "category_id": 5,
            "group_type": "standalone",
            "id": 30,
            "note": "",
            "short_name": "AWS",
            "slug": "amazon-web-services",
            "title": "Amazon Web Services"
        },
        {
            "cat_sort": null,
            "category_id": 5,
            "group_type": "ordered",
            "id": 29,
            "note": "",
            "short_name": "Initial Deploy on AWS",
            "slug": "initial-deploy-on-aws",
            "title": "Initial Deploy on AWS"
        }
    ],
    "paragraph_reference": [
        {
            "id": 203,
            "paragraph_id": 180,
            "reference_id": 172
        },
        {
            "id": 204,
            "paragraph_id": 180,
            "reference_id": 173
        },
        {
            "id": 205,
            "paragraph_id": 180,
            "reference_id": 174
        },
        {
            "id": 206,
            "paragraph_id": 180,
            "reference_id": 175
        },
        {
            "id": 207,
            "paragraph_id": 180,
            "reference_id": 176
        }
    ],
    "paragraphs": [
        {
            "guid": "574bbeab-9cc9-4884-b47b-918ea7246142",
            "id": 180,
            "image_info_key": "default",
            "image_path": "",
            "note": "",
            "short_title": "S3 Caching Strategy",
            "slug": "s3-caching-strategy",
            "standalone": true,
            "subtitle": "S3 Caching Strategy",
            "text": "<p>Caching is generally a wonderful way to make your site faster. Here are two methods for caching that are easily implemented: </p> <ol> <li>Using cache-control headers. In my Django settings, I have the following: <pre><code>AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400',}</code></pre> This makes it so the maximum time the browser will cache the |beg|aws-simple-storage-service|end| object added through boto3 is for 24 hours (86,400 seconds). You can also set this in the AWS console.</li> <li>Setting cache behavior in Cloudfront. For the most part, I just took the defaults, which gives me 24 hour caching.</li> </ol> <p>Caching is wonderful when your files don't change, but right after I installed |beg|cloudfront|end|, I experienced its downside. My javascript changes did not show up and clearing my browser cache did nothing. So I renamed my file and all was ok. My thoughts were what a pain, but research showed me that this was one of the recommended solutions: |beg_ref|aws_cloudfront_latest_on20210111_updatingexistingobjects|end_ref|. </p> <p>After some experimentation, decided to go with the recommended solution.  But first, it was necessary to eliminate the pain points.</p><p>Created a script that does the following: <ol><li>Compress the SCSS to CSS</li><li>Rename the css and/or js file by adding the epoch date (for versioning)</li><li>Leave the originally named files in the originals folder, in order to use git for tracking the changes</li><li>Update the html common code with the versioned filename</li><li>Upload all the newly versioned files, plus any new images, to S3</li></ol><p>Pain eliminated!</p>"
        },
        {
            "guid": "2272bbce-16d8-4482-96bd-9f507eb05eea",
            "id": 169,
            "image_info_key": "default",
            "image_path": "",
            "note": "",
            "short_title": "",
            "slug": "final",
            "standalone": false,
            "subtitle": "Final",
            "text": "<ol><li>Test (automated and manual) like crazy, don't forget data updates</li><li>Create convenience methods for updating files stored on S3 so that users get the latest version: Use |beg|s3-caching-strategy|end| as part of this effort</li><li>Monitor the site for costs and security.</li></ol>"
        }
    ],
    "record_lookups": {
        "categories": {
            "5": "study",
            "study": {
                "dev_id": 5
            }
        },
        "groups": {
            "29": "initial-deploy-on-aws",
            "30": "amazon-web-services",
            "amazon-web-services": {
                "dev_id": 30
            },
            "initial-deploy-on-aws": {
                "dev_id": 29
            }
        },
        "paragraphs": {
            "169": "2272bbce-16d8-4482-96bd-9f507eb05eea",
            "180": "574bbeab-9cc9-4884-b47b-918ea7246142",
            "2272bbce-16d8-4482-96bd-9f507eb05eea": {
                "dev_id": 169
            },
            "574bbeab-9cc9-4884-b47b-918ea7246142": {
                "dev_id": 180
            }
        },
        "references": {
            "172": "aws_cloudfront_latest_on20210111_updatingexistingobjects",
            "173": "cloudconfusing_20180806_cacheinvalidationamazons3",
            "174": "meghamala_20191122_aws_cloudfront_youtube_whycloudfrontservingoutdateds3",
            "175": "aws_cloudfront_latest_on20210111_expirationaddingheadersins3",
            "176": "barjeff_20150617_aws_blog_cloudfrontconfigurablemaxdefaultttl",
            "aws_cloudfront_latest_on20210111_expirationaddingheadersins3": {
                "dev_id": 175
            },
            "aws_cloudfront_latest_on20210111_updatingexistingobjects": {
                "dev_id": 172
            },
            "barjeff_20150617_aws_blog_cloudfrontconfigurablemaxdefaultttl": {
                "dev_id": 176
            },
            "cloudconfusing_20180806_cacheinvalidationamazons3": {
                "dev_id": 173
            },
            "meghamala_20191122_aws_cloudfront_youtube_whycloudfrontservingoutdateds3": {
                "dev_id": 174
            }
        }
    },
    "references": [
        {
            "id": 172,
            "link_text": "AWS_CloudFront_Latest_on20210111_UpdatingExistingObjects",
            "short_text": "Cloudfront Update Existing",
            "slug": "aws_cloudfront_latest_on20210111_updatingexistingobjects",
            "url": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/UpdatingExistingObjects.html"
        },
        {
            "id": 173,
            "link_text": "CloudConfusing_20180806_CacheInvalidationAmazonS3",
            "short_text": "CloudConfusing 20180806",
            "slug": "cloudconfusing_20180806_cacheinvalidationamazons3",
            "url": "https://cloudconfusing.com/2018/08/06/cache-invalidation-and-amazon-s3/"
        },
        {
            "id": 174,
            "link_text": "Meghamala_20191122_AWS_Cloudfront_YouTube_WhyCloudfrontServingOutdatedS3",
            "short_text": "Meghamala 20191122",
            "slug": "meghamala_20191122_aws_cloudfront_youtube_whycloudfrontservingoutdateds3",
            "url": "https://www.youtube.com/watch?v=JTOSzL8rLtk&feature=share"
        },
        {
            "id": 175,
            "link_text": "aws_cloudfront_latest_on20210111_ExpirationAddingHeadersInS3",
            "short_text": "Cloudfront S3 Exp Headers",
            "slug": "aws_cloudfront_latest_on20210111_expirationaddingheadersins3",
            "url": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html#ExpirationAddingHeadersInS3"
        },
        {
            "id": 176,
            "link_text": "BarJeff_20150617_AWS_Blog_CloudfrontConfigurableMaxDefaultTtl",
            "short_text": "Bar 20150617",
            "slug": "barjeff_20150617_aws_blog_cloudfrontconfigurablemaxdefaultttl",
            "url": "https://aws.amazon.com/blogs/aws/cloudfront-update-configurable-max-and-default-ttl/"
        }
    ]
}